services:
  # PostgreSQL database - only needed if you don't have PostgreSQL already running
  # If you have an existing PostgreSQL instance, you can skip this service
  # and configure the connection in .env file
  postgres:
    image: postgres:16-alpine
    container_name: learning-platform-postgres
    restart: unless-stopped
    networks:
      - my-network
    environment:
      - POSTGRES_DB=streaming_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - postgres  # Optional: start only when explicitly requested

  learning-platform-backend:
    build: .
    container_name: learning-platform-backend
    restart: unless-stopped
    networks:
      - my-network
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - MEDIA_PATH=/media
      - PORT=5000
      - DB_PATH=/app/data/database.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      # PostgreSQL connection - use host.docker.internal to connect to host's PostgreSQL
      # Or 'postgres' to use the docker-compose PostgreSQL service
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-streaming_service}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - D:/CourseMedia:/media:ro
      - ./data:/app/data
    # Only depend on postgres if it's being used (not when using external PostgreSQL)
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  my-network:
    external: true  # Use the network created by Caddy
    name: my-network