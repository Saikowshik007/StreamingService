services:
  postgres:
    image: postgres:16-alpine
    container_name: learning-platform-postgres
    restart: unless-stopped
    networks:
      - my-network
    environment:
      - POSTGRES_DB=streaming_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  learning-platform-backend:
    build: .
    container_name: learning-platform-backend
    restart: unless-stopped
    networks:
      - my-network
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - MEDIA_PATH=/media
      - PORT=5000
      - DB_PATH=/app/data/database.db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=streaming_service
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - D:/CourseMedia:/media:ro
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  my-network:
    external: true  # Use the network created by Caddy
    name: my-network