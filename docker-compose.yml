version: '3.8'

services:
  learning-platform-backend:
    build: .
    container_name: learning-platform-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    # Force this container to ONLY use jobtrak-network
    networks:
      jobtrak-network:
        aliases:
          - learning-backend
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - MEDIA_PATH=/media
      - PORT=5000
      - DB_PATH=/app/data/database.db
    volumes:
      - C:/Users/anant/Desktop/CourseMedia:/media:ro
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/learn/api/health"]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3
    labels:
      # Basic Traefik config
      traefik.enable: "true"
      traefik.docker.network: "jobtrak-network"

      # CRITICAL: Force Traefik to use this specific network
      traefik.http.services.learning-backend.loadbalancer.passhostheader: "true"

      # HTTPS Router (main)
      traefik.http.routers.learning.rule: "Host(`jobtrackai.duckdns.org`) && PathPrefix(`/learn`)"
      traefik.http.routers.learning.entrypoints: "websecure"
      traefik.http.routers.learning.tls: "true"
      traefik.http.routers.learning.tls.certresolver: "letsencrypt"
      traefik.http.routers.learning.priority: "200"
      traefik.http.routers.learning.service: "learning-backend"
      traefik.http.routers.learning.middlewares: "learning-cors"

      # HTTP Router (redirect to HTTPS)
      traefik.http.routers.learning-http.rule: "Host(`jobtrackai.duckdns.org`) && PathPrefix(`/learn`)"
      traefik.http.routers.learning-http.entrypoints: "web"
      traefik.http.routers.learning-http.priority: "200"
      traefik.http.routers.learning-http.middlewares: "learning-redirect"

      # Service definition
      traefik.http.services.learning-backend.loadbalancer.server.port: "5000"
      traefik.http.services.learning-backend.loadbalancer.healthcheck.path: "/learn/api/health"
      traefik.http.services.learning-backend.loadbalancer.healthcheck.interval: "10s"

      # CORS middleware
      traefik.http.middlewares.learning-cors.headers.accesscontrolallowmethods: "GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD"
      traefik.http.middlewares.learning-cors.headers.accesscontrolalloworiginlist: "https://streaming-service.vercel.app,https://jobtrackai.duckdns.org,http://localhost:3000"
      traefik.http.middlewares.learning-cors.headers.accesscontrolallowcredentials: "true"
      traefik.http.middlewares.learning-cors.headers.accesscontrolallowheaders: "Content-Type,Authorization,X-Requested-With,Range,Accept"
      traefik.http.middlewares.learning-cors.headers.accesscontrolexposeheaders: "Content-Length,Content-Range,Accept-Ranges"
      traefik.http.middlewares.learning-cors.headers.accesscontrolmaxage: "3600"

      # Redirect middleware
      traefik.http.middlewares.learning-redirect.redirectscheme.scheme: "https"
      traefik.http.middlewares.learning-redirect.redirectscheme.permanent: "true"

networks:
  jobtrak-network:
    external: true